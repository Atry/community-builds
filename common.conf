// Note: the Typesafe Config library is a bit picky with suffixes;
// the common files included via the "include" directive should
// have a ".conf" suffix.
//
// Each project is prefixed by ${vars.base} { ...
// so that common options or settings can be set by the
// configuration that includes this common file.
//
// If you use extra.options or commands in a project, or extend
// its "extra" description in other ways, please use the form:
//
//      extra.options += "opt1"
//      extra.options += "opt2"
//      extra.options += "opt3"
//      ...(one at a time)...
//
//  = or = the form:
//
//     extra: ${vars.base.extra} {
//       options += "opt1"
//       options += "opt2"
//       options += "opt3"
//      ...(one at a time)...
//     }
//
// so that any "extra" definitions that may come from vars.base are prepended.
// It is necessary to add the options one at a time due to a
// limitation of the Typesafe Config library.
//
///////////////////////////////////////////////////////////////////////

//
// This configuration file lists contain a set of projects
// and repositories, tracking the development of various community
// projects on top of a given (stable or release) Scala version.
//
// Its purpose is to allow developers to be informed whenever a change
// in one of the project breaks one or more other projects.
//
//
// This is the Typesafe development build file for the Scala 2.12.x branch.
// ------------------------------------------------------------------------
//
// This build file tracks the Scala 2.12.x branch, and is used
// to track the current development of Typesafe projects against
// (mostly) stable versions of their other required projects.
//
// Therefore:
// - Typesafe projects are either master or a development/unstable branch
// - the other projects are either from a stable release, a pre-release,
//   or a branch from a fork that is intended to stabilize the project.
//

// TODO: list the projects we're building, if not all of them
vars: {
  scala-ref                    : "scala/scala.git#2.12.x"
  scala-ref                    : ${?scala_ref}   // allow overriding scala-ref using the scala_ref environment variable
  scala-xml-ref                : "scala/scala-xml.git"
  scala-parser-combinators-ref : "scala/scala-parser-combinators.git"
  scala-swing                  : "scala/scala-swing.git#2.0.x"

  // version settings
  sbt-version-override         : "0.13.8"
}

vars {
  scalac-opts                  : ""
  scalac-opts                  : ${?scalac_opts}   // allows additional compiler options using the scala_ref environment
}

// NB: vars.base and vars.base.extra need to be defined using +=, in order to include the
// definitions in community-2.xx.x.dbuild
// The appendScalacOptions command is needed as a workaround for https://github.com/typesafehub/dbuild/issues/144
vars.base.extra.commands += "set commands += {\n  def appendScalacOptions(s: State, args: Seq[String]): State = {\n    val extracted = Project extract s\n    def appendDistinct[A](x: Seq[A], y: Seq[A]) = x.filterNot(y.contains) ++ y\n    import extracted._\n    val r = Project.relation(extracted.structure, true)\n    val allDefs = r._1s.toSeq\n    val projectScope = Load.projectScope(currentRef)\n    val scopes = allDefs.filter(_.key == scalacOptions.key).map(_.scope).distinct\n    val redefined = scopes.map(scope => scalacOptions in scope <<= (scalacOptions in scope).map(orig => appendDistinct(orig, args)))\n    val session = extracted.session.appendRaw(redefined)\n    BuiltinCommands.reapply(session, structure, s)  \n  }\n  Command.args(\"appendScalacOptions\", \"<option>\")(appendScalacOptions)\n}"
vars.base.extra.commands += "appendScalacOptions "${vars.scalac-opts}

vars.ivyPat: ", [organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]"
options.resolvers: {
  01: "local"
  02: "maven-cache: https://scala-ci.typesafe.com/artifactory/central/"
  03: "typesafe-ivy-releases: https://dl.bintray.com/typesafe/ivy-releases/, [organisation]/[module]/[revision]/[type]s/[artifact](-[classifier]).[ext], bootOnly"
  04: "sbt-plugin-releases: https://dl.bintray.com/sbt/sbt-plugin-releases/"${vars.ivyPat}
  09: "dbuild-snapshots: http://typesafe.artifactoryonline.com/typesafe/temp-distributed-build-snapshots"${vars.ivyPat}
  10: "maven-central"
  11: "old-typesafe-maven-releases: https://dl.bintray.com/typesafe/maven-releases" // for play 2.3.9's netty-http-pipelining 1.1.2
}

// we don't have enough disk space to keep stuff longer
options.cleanup: {
  extraction: {
    success: 48
    failure: 72
  }
  build: {
    success: 48
    failure: 72
  }
}

build += {
  check-missing: [ true, false ]
  cross-version: [ disabled, standard ]
  space.from: [ default ]
  space.to: default
  extraction-version: "2.12.0-M1"
  sbt-version: ${vars.sbt-version-override}
  projects: []
}
